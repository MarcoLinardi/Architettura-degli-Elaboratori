.data
prompt: .asciiz "Enter a number: "
result: .asciiz "Factorial is: "

.text
main:

    li $v0, 4
    la $a0, prompt
    syscall
    li $v0, 5
    syscall
    move $a0, $v0
    
    jal factorial
    move $s0, $v0
    
    li $v0, 4
    la $a0, result
    syscall
    move $a0, $s0
    li $v0, 1
    syscall
    li $v0, 10
    syscall

factorial:
    subu $sp, $sp, 8   # Alloca spazio sullo stack
    sw $ra, 0($sp)     # Salva il registro di ritorno $ra
    sw $a0, 4($sp)     # Salva l'argomento $a0
    li $t0, 1
    ble $a0, $t0, base_case # Se $a0 <= 1, vai al caso base

    # Caso ricorsivo: fact(n) = n * fact(n-1)
    subu $a0, $a0, 1   # $a0 = $a0 - 1
    jal factorial      # Chiama factorial(n-1)

    # Dopo il ritorno dalla chiamata ricorsiva
    lw $a0, 4($sp)     # Ripristina il valore originale di $a0
    mul $v0, $a0, $v0  # $v0 = $a0 * risultato della chiamata ricorsiva

    # Ripristina i registri e ritorna
    lw $ra, 0($sp)     # Ripristina il registro di ritorno
    addiu $sp, $sp, 8  # Dealloca lo spazio sullo stack
    jr $ra             # Ritorna dalla funzione

base_case:
    li $v0, 1          # Caso base: fact(0) = 1 e fact(1) = 1
    lw $ra, 0($sp)     # Ripristina il registro di ritorno
    lw $a0, 4($sp)     # Ripristina l'argomento $a0
    addiu $sp, $sp, 8  # Dealloca lo spazio sullo stack
    jr $ra             # Ritorna dalla funzione

