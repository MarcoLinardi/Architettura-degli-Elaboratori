.data
input_message:  .asciiz "Inserisci un numero da 0 a 255: "
output_message: .asciiz "Valore binario al contrario: "

.text
.globl main

main:
    li $v0, 4
    la $a0, input_message
    syscall
    li $v0, 5
    syscall
    move $t0, $v0 
    li $v0, 4
    la $a0, output_message
    syscall
    
    li $t4, 0		# Inizializzazione della variabile per la rappresentazione binaria al contrario
    li $t1, 0		# Inizializzazione dell'indice per l'array binario
    li $t5, 8

convert_to_binary:
    bge $t1, 8, Fine		# Se l'indice supera la dimensione massima dell'output (8 bit), termina il loop
    andi $t2, $t0, 1		# Trova il bit corrente (LSB) dell'input

    # Aggiungi il bit corrente alla rappresentazione binaria al contrario
    sllv  $t3, $t2, $t5  	# Sposta il bit nella posizione corretta
    or $t4, $t4, $t3  		# Aggiungi il bit al risultato finale
    srl $t0, $t0, 1		# Shifta l'input verso destra per prendere il prossimo bit
    addi $t1, $t1, 1		# Incrementa l'indice per l'array binario
    subi $t5, $t5, 1
    j convert_to_binary

Fine:
    move $a0, $t4
    li $v0, 1
    syscall

    li $v0, 10
    syscall

